<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--***************************************************************************
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//*****************************************************************************
-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpressionEditorStringId.Constant_True" xml:space="preserve">
    <value>Mantıksal True değerini temsil eder.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_False" xml:space="preserve">
    <value>Mantıksal False değerini gösterir.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_Null" xml:space="preserve">
    <value>Bir nesneye işaret etmeyen null referansı temsil eder.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Plus" xml:space="preserve">
    <value>Sayısal bir ifadeyi diğeriyle toplar veya iki string'i birbirine ekler.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Minus" xml:space="preserve">
    <value>İki sayının farkını bulur.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Multiply" xml:space="preserve">
    <value>İki ifadenin değerini çarpar.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Divide" xml:space="preserve">
    <value>İlk parametreyi ikinciye böler.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Modulo" xml:space="preserve">
    <value>Bir sayısal ifadenin diğerine bölümünden kalanı(mod) döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseOr" xml:space="preserve">
    <value>İlk parametresinin her bir bitini ikinci parametrede karşılık gelen bitle karşılaştırır. Eğer ikisi de 1 ise, ilgili sonuç biti 1 olur. Değilse 0 olur.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseAnd" xml:space="preserve">
    <value>İki integer değer arasında bitsel mantıksal VE işlemi yapar.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseXor" xml:space="preserve">
    <value>İki Boolean ifade arasında mantıksal çıkarma veya iki numerik ifade arasında bitsel çıkarma işlemi yapar.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Equal" xml:space="preserve">
    <value>İki parametre aynı değere sahipse True döner, yoksa False döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_NotEqual" xml:space="preserve">
    <value>İşlenen iki değer farklıysa true döner, aynıysa false döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Less" xml:space="preserve">
    <value>Küçüktür operatörü. İfadeleri karşılaştırmakta kullanılır.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_LessOrEqual" xml:space="preserve">
    <value>Küçük eşittir operatörü. İfadeleri karşılaştırmakta kullanılır.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_GreaterOrEqual" xml:space="preserve">
    <value>Büyük eşittir operatörü. İfadeleri karşılaştırmakta kullanılır.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Greater" xml:space="preserve">
    <value>Büyüktür operatörü. İfadeleri karşılaştırmakta kullanılır.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_In" xml:space="preserve">
    <value>In (,,,)
Bir nesnede bir özelliğin varlığını test eder.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Like" xml:space="preserve">
    <value>Bir stringi bir desen ile karşılaştırır. Eğer string ile desen uyuşursa sonuç true olur. Eğer string ile desen uyuşmazsa sonuç false olur. Eğer string ve desen boş string'ler ise sonuç true olur.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Between" xml:space="preserve">
    <value>Arasinda(,)
Test edilmek üzere bir aralık belirtir. Eğer bir değer ilk parametreden büyükse veya ona eşitse ve ikinci parametreden küçükse veya ona eşitse true döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_And" xml:space="preserve">
    <value>İki ifade üzerinde mantıksal birleşim yapar.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Or" xml:space="preserve">
    <value>İki Boolean değer üzerinde mantıksal ayrım gerçekleştirir.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Not" xml:space="preserve">
    <value>Bir ifadede mantıksal çıkarma yapar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Max" xml:space="preserve">
    <value>Max (Değer1, değer2)
En büyük değer belirtilen değerleri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Min" xml:space="preserve">
    <value>Min (Değer1, değer2)
En düşük değer belirtilen değerleri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Abs" xml:space="preserve">
    <value>Abs(Value)
Belirtilen sayısal ifade mutlak, pozitif değeri verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Acos" xml:space="preserve">
    <value>Acos(Value)
(Açı, radyan kosinüsüdür belirtilen float ifade) bir sayının arkkosinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Asin" xml:space="preserve">
    <value>Asin(Value)
(Açı, radyan sinüsü belirtilen float ifade olduğunu) bir sayının arksinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn" xml:space="preserve">
    <value>Atn(Value)
(Açı, radyan tanjantı belirtilen float ifade) bir sayının arktanjantını verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn2" xml:space="preserve">
    <value>Atn2 (Değer1, değer2)
Tanjantı iki belirtilen sayının radyan cinsinden açı verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_BigMul" xml:space="preserve">
    <value>BigMul(Değer1, Değer2)
Belirtilen 2 32-bit değerin tam çarpımını Int64 olarak döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ceiling" xml:space="preserve">
    <value>Ceiling(Value)
Büyük veya eşit belirtilen sayısal ifade en küçük tamsayıyı döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cos" xml:space="preserve">
    <value>Cos(Value)
Radyan cinsinden tanımlanan açının kosinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sin" xml:space="preserve">
    <value>Sin(Value)
Radyan cinsinden tanımlanan açının sinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tan" xml:space="preserve">
    <value>Tan(Value)
Radyan cinsinden tanımlanan açının tanjantını verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cosh" xml:space="preserve">
    <value>Cosh(Value)
Radyan cinsinden tanımlanan açının hiperbolik kosinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sinh" xml:space="preserve">
    <value>Sinh(Value)
Radyan cinsinden tanımlanan açının hiperbolik sinüsünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tanh" xml:space="preserve">
    <value>Tanh(Value)
Radyan cinsinden tanımlanan açının hiperbolik tanjantını verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Exp" xml:space="preserve">
    <value>Exp(Value)
Belirtilen float ifade üstel değerini verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sqr" xml:space="preserve">
    <value>Sqr(Value)
Verilen bir sayının kare kökünü verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Floor" xml:space="preserve">
    <value>Floor(Value)
En büyük tamsayıyı döndürür belirtilen sayısal ifade küçük veya eşit.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sign" xml:space="preserve">
    <value>Sign(Value)
Pozitif (+ 1), sıfır (0) veya negatif (-1) verilen ifade işareti döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round" xml:space="preserve">
    <value>Round(Value)
Verilen değer en yakın tam sayıya yuvarlar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round_2" xml:space="preserve">
    <value>Yuvarla(Değer, Hassasiyet)
Verilen Değer'i en yakın tam sayıya veya verilen Hassasiyet kadar ondalık içeren sayıya yuvarlar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log" xml:space="preserve">
    <value>Log(Value)
Belirtilen sayının doğal logaritmasını döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log_2" xml:space="preserve">
    <value>Log(Değer, Taban)
Verilen Değer'in Taban tabanında logaritmasını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log10" xml:space="preserve">
    <value>Log10(Değer)
Verilen Değer'in 10 tabanında logaritmasını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Power" xml:space="preserve">
    <value>Power (güç, değeri)
Belirtilen üssü belirtilen bir sayı verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Rnd" xml:space="preserve">
    <value>Rnd()
1'den, ama sıfırdan büyük veya sıfıra eşit olan rasgele bir sayı verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToInt" xml:space="preserve">
    <value>ToInt(Value)
Eşdeğer bir 32 bitlik imzalı tamsayı değeri dönüştürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToLong" xml:space="preserve">
    <value>ToLong(Value)
Eşdeğer bir 64 bitlik imzalı tamsayı değeri dönüştürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToFloat" xml:space="preserve">
    <value>ToFloat(Value)
Bir eşdeğer 32 bitlik tek duyarlıklı kayan nokta sayısı için değer dönüştürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDouble" xml:space="preserve">
    <value>ToDouble(Value)
Bir eşdeğer 64-bit çift duyarlıklı kayan nokta sayısı için değer dönüştürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDecimal" xml:space="preserve">
    <value>ToDecimal(Value)
Eşdeğer bir ondalık sayıya dönüştürür değer.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_StartsWith" xml:space="preserve">
    <value>StartsWith (dize, StartString)
Doğru dize başlangıcı StartString uyup uymadığını verir; Aksi takdirde, False döndürülür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_EndsWith" xml:space="preserve">
    <value>EndsWith(String, SonString)
Eğer SonString, String'in sonunda yer alıyorsa True döner. Yoksa False döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Contains" xml:space="preserve">
    <value>Contains(String, SubString)
Eğer SubString, String içerisinde varsa True döner. Yoksa False döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Trim" xml:space="preserve">
    <value>Trim(String)
Tüm baştaki ve sondaki boşluk karakterleri dizesi kaldırır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Len" xml:space="preserve">
    <value>Len(Value)
Bir dize ya da nominal bir değişkeni depolamak için gereken bayt sayısını da içeren bir tamsayı karakter sayısını verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Upper" xml:space="preserve">
    <value>Upper(String)
Büyük harf döndürür dize.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Lower" xml:space="preserve">
    <value>Lower(String)
Harflerle dizesini döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Concat" xml:space="preserve">
    <value>Concat (String1,..., StringN)
Herhangi bir ek dizeler geçerli dize birleştirme içeren bir string değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ascii" xml:space="preserve">
    <value>Ascii(String)
Bir karakter ifadesindeki en soldaki karakterin ASCII değerini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Reverse" xml:space="preserve">
    <value>Reverse(String)
Bir dize içinde öğelerin sırası tersine çevirir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToStr" xml:space="preserve">
    <value>ToStr(Value)
Nesne bir dize gösterimini verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Char" xml:space="preserve">
    <value>Char(Number)
Bir integerASCIICode bir karaktere dönüştürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex" xml:space="preserve">
    <value>CharIndex(dize1, dize2)
Sıfır karakter konumu bir dize sonu başlayan Dize1 Dize2, içindeki başlangıç konumunu döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex_3" xml:space="preserve">
    <value>CharIndex(dize1, dize2, StartLocation)
StartLocation karakter konumu bir dize sonu başlayan Dize1 Dize2, içindeki başlangıç konumunu döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft" xml:space="preserve">
    <value>PadLeft (dize, uzunluk)
Sol tarafında bir belirtilen toplam uzunluğu kadar beyaz boşluk karakterleri ile doldurma tanımlanmış dizedeki karakter kümelerini sola hizalar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight" xml:space="preserve">
    <value>PadRight (dize, uzunluk)
Sol tarafında bir belirtilen toplam uzunluğu kadar beyaz boşluk karakterleri ile doldurma tanımlanmış dizedeki karakter kümelerini sağa hizalar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft_3" xml:space="preserve">
    <value>PadLeft(String, uzunluk, Char)
Sol tarafında bir belirtilen toplam uzunluk belirtilen Char ile doldurma tanımlanmış dizedeki karakter kümelerini sola hizalar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight_3" xml:space="preserve">
    <value>PadRight(String, uzunluk, Char)
Sol tarafında bir belirtilen toplam uzunluk belirtilen Char ile doldurma tanımlanmış dizedeki karakter kümelerini sağa hizalar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove" xml:space="preserve">
    <value>Kaldır(dize, StartPosition)
Bu örnek, belirtilen konumda başlayan tüm karakterleri siler.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove_3" xml:space="preserve">
    <value>Remove(String, BasPozisyon, Uzunluk)
Verilen String'in BasPozisyon'undan başlayarak Uzunluk kadar karakter siler.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Replace" xml:space="preserve">
    <value>Replace(String, AltString2, String3)
String'in içerisinde geçen AltString2'leri String3 ile değiştirir ve bu kopyayı döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Insert" xml:space="preserve">
    <value>Insert(String1, İlkPoizsyon, String2)
String2'yi String1'in İlkPoizsyon'una ekler.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring" xml:space="preserve">
    <value>Substring(String, BasPozisyon)
Strin'ten bir alt string döner. Alt string, BasPozisyon'dan başlar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring_3" xml:space="preserve">
    <value>Substring(String, BasPozisyon, Uzunluk)
Strin'ten bir alt string döner. Alt string, BasPozisyon'dan başlar ve verilen Uzunluk kadar karakter içerir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Iif" xml:space="preserve">
    <value>Iif(Ifade, DogruKesim, YanlisKesim)
Eğer Ifade'nin mantıksal sonucu true ise DogruKesim'i, false ise YanlisKesim'i döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNull" xml:space="preserve">
    <value>IsNull(Değer)
Verilen değer NULL ise True döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNullOrEmpty" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Verilen String NULL veya boş bir string ise True döner. Değilse False döner</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisWeek" xml:space="preserve">
    <value>IsThisWeek(TarihZaman)
Verilen TarihZaman bu hafta içerisindeyse True döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisMonth" xml:space="preserve">
    <value>IsThisMonth(TarihZaman)
Verilen TarihZaman bu ay içerisindeyse True döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisYear" xml:space="preserve">
    <value>IsThisYear(TarihZaman)
Verilen TarihZaman bu yıl içerisindeyse True döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Ertesi gün için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastWeek" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Önceki haftanın ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextMonth" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Bir sonraki ayın ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextWeek" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Aşağıdaki haftanın ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextYear" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Ertesi yıl ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNow" xml:space="preserve">
    <value>LocalDateTimeNow()
Zaman şimdiki an ilgili tarih ve saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisMonth" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Geçerli ayın ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisWeek" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Geçerli haftanın ilk gününe ilgili tarih ve saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisYear" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Geçerli yılın ilk günü için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeToday" xml:space="preserve">
    <value>LocalDateTimeToday()
Bugün için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTomorrow" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Yarın için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Sonra gelecek hafta haftanın ilk günü ilgili tarih ve saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYesterday" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Dün için karşılık gelen bir tarih saat değeri döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTicks" xml:space="preserve">
    <value>AddTicks(TarihZaman, AnSayisi)
Belirtilen TarihZaman'dan belirtilen AnSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMilliSeconds" xml:space="preserve">
    <value>AddMilliSeconds(TarihZaman, MSSayisi)
Belirtilen TarihZaman'dan belirtilen MSSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddSeconds" xml:space="preserve">
    <value>AddSeconds(TarihZaman, SaniyeSayisi)
Belirtilen TarihZaman'dan belirtilen SaniyeSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMinutes" xml:space="preserve">
    <value>AddMinutes(TarihZaman, DakikaSayisi)
Belirtilen TarihZaman'dan belirtilen DakikaSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddHours" xml:space="preserve">
    <value>AddHours(TarihZaman, SaatSayisi)
Belirtilen TarihZaman'dan belirtilen SaatSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddDays" xml:space="preserve">
    <value>AddDays(TarihZaman, GunSayisi)
Belirtilen TarihZaman'dan belirtilen GunSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMonths" xml:space="preserve">
    <value>AddMonths(TarihZaman, AySayisi)
Belirtilen TarihZaman'dan belirtilen AySayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddYears" xml:space="preserve">
    <value>AddYears(TarihZaman, YilSayisi)
Belirtilen TarihZaman'dan belirtilen YilSayisi kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTimeSpan" xml:space="preserve">
    <value>AddTimeSpan(TarihZaman, ZamanAralik)
Belirtilen TarihZaman'dan belirtilen ZamanAraliki kadar sonrasının tarihini döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffDay" xml:space="preserve">
    <value>DateDiffDay(basTarih, sonTarih)
İki null olmayan tarih arasındaki gün farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffHour" xml:space="preserve">
    <value>DateDiffHour(basTarih, sonTarih)
İki null olmayan tarih arasındaki saat farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMilliSecond" xml:space="preserve">
    <value>DateDiffMilliSecond(basTarih, sonTarih)
İki null olmayan tarih arasındaki milisaniye farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMinute" xml:space="preserve">
    <value>DateDiffMinute(basTarih, sonTarih)
İki null olmayan tarih arasındaki dakika farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMonth" xml:space="preserve">
    <value>DateDiffMonth(basTarih, sonTarih)
İki null olmayan tarih arasındaki ay farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffSecond" xml:space="preserve">
    <value>DateDiffSecond(basTarih, sonTarih)
İki null olmayan tarih arasındaki saniye farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffTick" xml:space="preserve">
    <value>DateDiffTick(basTarih, sonTarih)
İki null olmayan tarih arasındaki an farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffYear" xml:space="preserve">
    <value>DateDiffYear(basTarih, sonTarih)
İki null olmayan tarih arasındaki yıl farkını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDate" xml:space="preserve">
    <value>GetDate(TarihZaman)
Verilen TarihZaman'dan Tarih alır</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDay" xml:space="preserve">
    <value>GetDay(TarihZaman)
Verilen TarihZaman'dan Gün alır</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfWeek" xml:space="preserve">
    <value>GetDayOfWeek(TarihZaman)
Verilen TarihZaman'dan haftanın gününü alır</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfYear" xml:space="preserve">
    <value>GetDayOfYear(TarihZaman)
Verilen TarihZaman'dan yılın gününü alır</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMilliSecond" xml:space="preserve">
    <value>GetMilliSecond(TarihZaman)
Verilen TarihZaman'dan milisaniyeyi alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMinute" xml:space="preserve">
    <value>GetMinute(TarihZaman)
Verilen TarihZaman'dan dakikayı alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMonth" xml:space="preserve">
    <value>GetMonth(TarihZaman)
Verilen TarihZaman'dan ayı alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetSecond" xml:space="preserve">
    <value>GetSecond(TarihZaman)
Verilen TarihZaman'dan saniyeyi alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetTimeOfDay" xml:space="preserve">
    <value>GetTimeOfDay(TarihZaman)
Verilen TarihZaman'dan an olarak günün zamanını alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetYear" xml:space="preserve">
    <value>GetYear(TarihZaman)
Verilen TarihZaman'dan yılı alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetHour" xml:space="preserve">
    <value>GetHour(TarihZaman)
Verilen TarihZaman'dan saati alır.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Now" xml:space="preserve">
    <value>Now()
Şu anın sistem tarih ve zamanını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Today" xml:space="preserve">
    <value>Today()
Bugünün tarihini döner. İsimden bağımsız olarak bugünün geceyarısını döner.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_UtcNow" xml:space="preserve">
    <value>UtcNow()
Geçerli sistem tarihi ve saati, Eşgüdümlü Evrensel Saat (UTC) olarak ifade edilen verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AvgAggregate" xml:space="preserve">
    <value>Avg(Value)
Koleksiyondaki değerlerini değerlendirir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CountAggregate" xml:space="preserve">
    <value>Count() işlevi
Bir koleksiyon nesne sayısını döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ExistsAggregate" xml:space="preserve">
    <value>Exists()
Nesne koleksiyonda zaten var olup olmadığını belirler.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MaxAggregate" xml:space="preserve">
    <value>Max(Value)
Maksimum ifade değeri bir koleksiyon döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MinAggregate" xml:space="preserve">
    <value>Min(Value)
Minimum ifade değeri bir koleksiyon döndürür.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SumAggregate" xml:space="preserve">
    <value>Sum(Value)
Tüm ifade değerleri koleksiyonunda verir.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SingleAggregate" xml:space="preserve">
    <value>Single()
Tek bir nesne derlemeden döndürür.</value>
  </data>
</root>